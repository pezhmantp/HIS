server:
  port: 8090
spring:
  application:
    name: his-client
  mvc:
    static-path-pattern: /static/**
  security:
    oauth2:
      client:
        registration:
          hismvcclientapp:
            client-id: his-client-app
            client-secret: UAgwes8S5UynxyT59Z96UxAAYMaBdlED
            scope: openid, profile, roles
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8090/login/oauth2/code/hismvcclientapp
        provider:
          hismvcclientapp:
            issuerUri: http://localhost:8080/realms/hisclientapp
            authorization-uri: http://localhost:8080/realms/hisclientapp/protocol/openid-connect/auth
            token-uri: http://localhost:8080/realms/hisclientapp/protocol/openid-connect/token
            jwk-set-uri: http://localhost:8080/realms/hisclientapp/protocol/openid-connect/certs
            user-info-uri: http://localhost:8080/realms/hisclientapp/protocol/openid-connect/userinfo
            user-name-attribute: preferred_username
  datasource:
    url: jdbc:mysql://localhost:3306/doctor_db?createDatabaseIfNotExist=true
    username: root
    password: myhawramRootPsw1
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: true
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always
#resilience4j:
#  circuitbreaker:
#    instances:
#      serviceA:
#        registerHealthIndicator: true
#        eventConsumerBufferSize: 10
#        failureRateThreshold: 50
#        minimumNumberOfCalls: 5
#        automaticTransitionFromOpenToHalfOpenEnabled: true
#        waitDurationInOpenState: 5s
#        permittedNumberOfCallsInHalfOpenState: 3
#        slidingWindowSize: 10
#        slidingWindowType: COUNT_BASED
#  retry:
#    instances:
#      serviceA:
#        registerHealthIndicator: true
#        maxRetryAttempts: 5
#        waitDuration: 10s
#  ratelimiter:
#    instances:
#      serviceA:
#        registerHealthIndicator: false
#        limitForPeriod: 10
#        limitRefreshPeriod: 10s
#        timeoutDuration: 3s

